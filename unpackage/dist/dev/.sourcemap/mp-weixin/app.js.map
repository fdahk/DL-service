{"version":3,"file":"app.js","sources":["App.vue","main.js"],"sourcesContent":["<script>\r\n\t// 导出一个对象，作为 App.vue 组件的配置。这个对象会被 uni-app 框架识别为应用的根组件\r\n\t// 这是uniapp特有的写法结构，也是推荐的结构\r\n\t// 这些钩子是 uni-app 框架自动调用的，只有在 App.vue 的 export default 里定义才会生效\r\n\t// setup 不支持默认导出，虽然是vue3项目，但官方只能这样写\r\n\texport default {\r\n\t\tonLaunch: function() {\r\n\t\t\tconsole.log('App Launch')\r\n\t\t},\r\n\t\tonShow: function() {\r\n\t\t\tconsole.log('App Show')\r\n\t\t},\r\n\t\tonHide: function() {\r\n\t\t\tconsole.log('App Hide')\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t/* 注：style代码快要加@，必须声明lang=\"scss\"才能引入scss文件 */\r\n\t@import './style/commonStyle.scss';\r\n\t// 全局背景色\r\n\tpage {\r\n\t\tbackground-color: #10020211;\r\n\t}\r\n</style>\r\n","import App from './App'\nimport './static/icons/iconfont.css'\n\n// uni-app 独有的“条件编译指令， 用以实现多端适配\n// #ifndef VUE3\nimport Vue from 'vue'   // 引入 Vue 2 的核心库\nimport './uni.promisify.adaptor'  // 引入 uni-app 的 Promise 适配器\nVue.config.productionTip = false  // 关闭 Vue 的生产环境提示\nApp.mpType = 'app'      // 设置 App 为小程序类型\nconst app = new Vue({   \n  ...App               // 展开 App 组件的所有属性\n})\napp.$mount()           \n// #endif             \n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'  // 引入 Vue 3 的 SSR 应用创建函数\nexport function createApp() {       \n  const app = createSSRApp(App)     // 创建支持服务端渲染的 Vue 3 应用\n  return {                         // 注：仅返回应用实例，uni-app 框架会自动处理挂载流程\n    app\n  }\n}\n// #endif                         "],"names":["uni","createSSRApp","App"],"mappings":";;;;;;;;;;AAKC,MAAK,YAAU;AAAA,EACd,UAAU,WAAW;AACpBA,kBAAAA,MAAA,MAAA,OAAA,gBAAY,YAAY;AAAA,EACxB;AAAA,EACD,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,iBAAA,UAAU;AAAA,EACtB;AAAA,EACD,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,iBAAA,UAAU;AAAA,EACvB;AACD;ACEM,SAAS,YAAY;AAC1B,QAAM,MAAMC,cAAY,aAACC,SAAG;AAC5B,SAAO;AAAA;AAAA,IACL;AAAA,EACD;AACH;;;"}